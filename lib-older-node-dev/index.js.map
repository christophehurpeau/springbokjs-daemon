{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;kBAuEwB,Y;;AAvExB;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,4BAAU,EAAE,KAAK,oBAAP,EAA6B,SAAS,kCAAtC,EAAV;;IAEM,e;;;AACF,6BAAY,OAAZ,EAAqB,IAArB,EAA2B;AAAA;;AAAA;;AAEvB,cAAK,OAAL,GAAe,OAAf;AACA,cAAK,IAAL,GAAY,IAAZ;AACA,cAAK,OAAL,GAAe,IAAf;AACA,cAAK,UAAL,GAAkB,KAAlB;AACA,cAAK,QAAL,GAAgB,KAAhB;AACA,cAAK,MAAL,GAAc,0BAAW,oBAAX,CAAd;AACA,cAAK,MAAL,CAAY,IAAZ,CAAiB,WAAW,cAAa,KAAK,IAAL,CAAU,GAAV,CAAxB,CAAjB;AARuB;AAS1B;;;;gCAEO;AAAA;;AACJ,iBAAK,QAAL,GAAgB,KAAhB;AACA,iBAAK,MAAL,CAAY,KAAZ,CAAkB,aAAlB;AACA,iBAAK,IAAL;;AAEA,iBAAK,OAAL,GAAe,0BAAM,KAAK,OAAX,EAAoB,KAAK,IAAzB,EAA+B,EAAE,KAAK,QAAQ,GAAf,EAA/B,CAAf;AACA,iBAAK,OAAL,CAAa,MAAb,CAAoB,WAApB,CAAgC,MAAhC,EAAwC,UAAC,IAAD,EAAU;AAC9C,wBAAQ,MAAR,CAAe,KAAf,CAAqB,IAArB;AACA,uBAAK,IAAL,CAAU,QAAV,EAAoB,IAApB;AACH,aAHD;AAIA,iBAAK,OAAL,CAAa,MAAb,CAAoB,WAApB,CAAgC,MAAhC,EAAwC,UAAC,IAAD,EAAU;AAC9C,wBAAQ,MAAR,CAAe,KAAf,CAAqB,IAArB;AACA,uBAAK,IAAL,CAAU,QAAV,EAAoB,IAApB;AACH,aAHD;AAIA,iBAAK,OAAL,CAAa,WAAb,CAAyB,MAAzB,EAAiC,UAAC,IAAD,EAAU;AACvC,oBAAI,OAAK,QAAT,EAAmB;AACf,2BAAK,MAAL,CAAY,IAAZ,CAAiB,SAAjB,EAA4B,EAAE,YAAY,IAAd,EAA5B;AACH,iBAFD,MAEO;AACH,2BAAK,MAAL,CAAY,IAAZ,CAAiB,QAAjB,EAA2B,EAAE,YAAY,IAAd,EAA3B;AACH;;AAED,uBAAK,OAAL,GAAe,IAAf;AACA,oBAAI,OAAK,UAAT,EAAqB;AACjB,2BAAK,KAAL;AACH;AACJ,aAXD;AAYH;;;+BAEM;AACH,iBAAK,UAAL,GAAkB,KAAlB;AACA,gBAAI,KAAK,OAAT,EAAkB;AACd,qBAAK,QAAL,GAAgB,IAAhB;AACA,qBAAK,MAAL,CAAY,IAAZ,CAAiB,aAAjB;AACA,qBAAK,OAAL,CAAa,IAAb;AACH;AACJ;;;kCAES;AACN,iBAAK,MAAL,CAAY,IAAZ,CAAiB,eAAjB;AACA,gBAAI,KAAK,OAAT,EAAkB;AACd,qBAAK,UAAL,GAAkB,IAAlB;AACA,qBAAK,OAAL,CAAa,IAAb;AACH,aAHD,MAGO;AACH,qBAAK,KAAL;AACH;AACJ;;;uCAEc,O,EAAiB;AAAA;;AAAA,yBAAjB,OAAiB;AAAA,+HAAjB,OAAiB;AAAA;;AAC5B,mBAAO,WAAW;AAAA,uBAAM,OAAK,OAAL,EAAN;AAAA,aAAX,EAAiC,OAAjC,CAAP;AACH;;;;;;AAGU,SAAS,YAAT,CAAsB,OAAtB,EAA+B,IAA/B,EAAqC;AAChD,WAAO,IAAI,eAAJ,CAAoB,OAApB,EAA6B,IAA7B,CAAP;AACH;;AAEM,IAAM,sBAAO,SAAP,IAAO;AAAA,WAAQ,aAAa,MAAb,EAAqB,IAArB,CAAR;AAAA,CAAb;AACP,aAAa,IAAb,GAAoB,IAApB","file":"index.js","sourcesContent":["import { spawn } from 'child_process';\nimport Logger, { addConfig } from 'nightingale';\nimport ConsoleLogger from 'nightingale-console';\nimport { EventEmitter } from 'events';\n\naddConfig({ key: 'springbokjs-daemon', handler: new ConsoleLogger() });\n\nclass SpringbokDaemon extends EventEmitter {\n    constructor(command, args) {\n        super();\n        this.command = command;\n        this.args = args;\n        this.process = null;\n        this.restarting = false;\n        this.stopping = false;\n        this.logger = new Logger('springbokjs-daemon');\n        this.logger.info(command + (args && (` ${args.join(' ')}`)));\n    }\n\n    start() {\n        this.stopping = false;\n        this.logger.debug('Starting...');\n        this.stop();\n\n        this.process = spawn(this.command, this.args, { env: process.env });\n        this.process.stdout.addListener('data', (data) => {\n            process.stdout.write(data);\n            this.emit('stdout', data);\n        });\n        this.process.stderr.addListener('data', (data) => {\n            process.stderr.write(data);\n            this.emit('stderr', data);\n        });\n        this.process.addListener('exit', (code) => {\n            if (this.stopping) {\n                this.logger.info('Stopped', { exitStatus: code });\n            } else {\n                this.logger.warn('Exited', { exitStatus: code });\n            }\n\n            this.process = null;\n            if (this.restarting) {\n                this.start();\n            }\n        });\n    }\n\n    stop() {\n        this.restarting = false;\n        if (this.process) {\n            this.stopping = true;\n            this.logger.info('Stopping...');\n            this.process.kill();\n        }\n    }\n\n    restart() {\n        this.logger.info('Restarting...');\n        if (this.process) {\n            this.restarting = true;\n            this.process.kill();\n        } else {\n            this.start();\n        }\n    }\n\n    restartTimeout(timeout: number) {\n        return setTimeout(() => this.restart(), timeout);\n    }\n}\n\nexport default function createDaemon(command, args) {\n    return new SpringbokDaemon(command, args);\n}\n\nexport const node = args => createDaemon('node', args);\ncreateDaemon.node = node;\n"]}