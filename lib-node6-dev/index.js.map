{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;kBAuEwB,Y;;AAvExB;;AACA;;;;AACA;;;;AACA;;;;AAEA,4BAAU,EAAE,KAAK,oBAAP,EAA6B,SAAS,kCAAtC,EAAV;;AAEA,MAAM,eAAN,8BAA2C;AACvC,gBAAY,OAAZ,EAAqB,IAArB,EAA2B;AACvB;AACA,aAAK,OAAL,GAAe,OAAf;AACA,aAAK,IAAL,GAAY,IAAZ;AACA,aAAK,OAAL,GAAe,IAAf;AACA,aAAK,UAAL,GAAkB,KAAlB;AACA,aAAK,QAAL,GAAgB,KAAhB;AACA,aAAK,MAAL,GAAc,0BAAW,oBAAX,CAAd;AACA,aAAK,MAAL,CAAY,IAAZ,CAAiB,WAAW,QAAU,KAAG,KAAK,IAAL,CAAU,GAAV,CAAe,GAAvC,CAAjB;AACH;;AAED,YAAQ;AACJ,aAAK,QAAL,GAAgB,KAAhB;AACA,aAAK,MAAL,CAAY,KAAZ,CAAkB,aAAlB;AACA,aAAK,IAAL;;AAEA,aAAK,OAAL,GAAe,0BAAM,KAAK,OAAX,EAAoB,KAAK,IAAzB,EAA+B,EAAE,KAAK,QAAQ,GAAf,EAA/B,CAAf;AACA,aAAK,OAAL,CAAa,MAAb,CAAoB,WAApB,CAAgC,MAAhC,EAAyC,IAAD,IAAU;AAC9C,oBAAQ,MAAR,CAAe,KAAf,CAAqB,IAArB;AACA,iBAAK,IAAL,CAAU,QAAV,EAAoB,IAApB;AACH,SAHD;AAIA,aAAK,OAAL,CAAa,MAAb,CAAoB,WAApB,CAAgC,MAAhC,EAAyC,IAAD,IAAU;AAC9C,oBAAQ,MAAR,CAAe,KAAf,CAAqB,IAArB;AACA,iBAAK,IAAL,CAAU,QAAV,EAAoB,IAApB;AACH,SAHD;AAIA,aAAK,OAAL,CAAa,WAAb,CAAyB,MAAzB,EAAkC,IAAD,IAAU;AACvC,gBAAI,KAAK,QAAT,EAAmB;AACf,qBAAK,MAAL,CAAY,IAAZ,CAAiB,SAAjB,EAA4B,EAAE,YAAY,IAAd,EAA5B;AACH,aAFD,MAEO;AACH,qBAAK,MAAL,CAAY,IAAZ,CAAiB,QAAjB,EAA2B,EAAE,YAAY,IAAd,EAA3B;AACH;;AAED,iBAAK,OAAL,GAAe,IAAf;AACA,gBAAI,KAAK,UAAT,EAAqB;AACjB,qBAAK,KAAL;AACH;AACJ,SAXD;AAYH;;AAED,WAAO;AACH,aAAK,UAAL,GAAkB,KAAlB;AACA,YAAI,KAAK,OAAT,EAAkB;AACd,iBAAK,QAAL,GAAgB,IAAhB;AACA,iBAAK,MAAL,CAAY,IAAZ,CAAiB,aAAjB;AACA,iBAAK,OAAL,CAAa,IAAb;AACH;AACJ;;AAED,cAAU;AACN,aAAK,MAAL,CAAY,IAAZ,CAAiB,eAAjB;AACA,YAAI,KAAK,OAAT,EAAkB;AACd,iBAAK,UAAL,GAAkB,IAAlB;AACA,iBAAK,OAAL,CAAa,IAAb;AACH,SAHD,MAGO;AACH,iBAAK,KAAL;AACH;AACJ;;AAED,mBAAe,OAAf,EAAgC;AAAA,qBAAjB,OAAiB;AAAA,2HAAjB,OAAiB;AAAA;;AAC5B,eAAO,WAAW;AAAA,mBAAM,KAAK,OAAL,EAAN;AAAA,SAAX,EAAiC,OAAjC,CAAP;AACH;AA7DsC;;AAgE5B,SAAS,YAAT,CAAsB,OAAtB,EAA+B,IAA/B,EAAqC;AAChD,WAAO,IAAI,eAAJ,CAAoB,OAApB,EAA6B,IAA7B,CAAP;AACH;;AAEM,MAAM,sBAAO;AAAA,WAAQ,aAAa,MAAb,EAAqB,IAArB,CAAR;AAAA,CAAb;AACP,aAAa,IAAb,GAAoB,IAApB","file":"index.js","sourcesContent":["import { spawn } from 'child_process';\nimport Logger, { addConfig } from 'nightingale';\nimport ConsoleLogger from 'nightingale-console';\nimport { EventEmitter } from 'events';\n\naddConfig({ key: 'springbokjs-daemon', handler: new ConsoleLogger() });\n\nclass SpringbokDaemon extends EventEmitter {\n    constructor(command, args) {\n        super();\n        this.command = command;\n        this.args = args;\n        this.process = null;\n        this.restarting = false;\n        this.stopping = false;\n        this.logger = new Logger('springbokjs-daemon');\n        this.logger.info(command + (args && (` ${args.join(' ')}`)));\n    }\n\n    start() {\n        this.stopping = false;\n        this.logger.debug('Starting...');\n        this.stop();\n\n        this.process = spawn(this.command, this.args, { env: process.env });\n        this.process.stdout.addListener('data', (data) => {\n            process.stdout.write(data);\n            this.emit('stdout', data);\n        });\n        this.process.stderr.addListener('data', (data) => {\n            process.stderr.write(data);\n            this.emit('stderr', data);\n        });\n        this.process.addListener('exit', (code) => {\n            if (this.stopping) {\n                this.logger.info('Stopped', { exitStatus: code });\n            } else {\n                this.logger.warn('Exited', { exitStatus: code });\n            }\n\n            this.process = null;\n            if (this.restarting) {\n                this.start();\n            }\n        });\n    }\n\n    stop() {\n        this.restarting = false;\n        if (this.process) {\n            this.stopping = true;\n            this.logger.info('Stopping...');\n            this.process.kill();\n        }\n    }\n\n    restart() {\n        this.logger.info('Restarting...');\n        if (this.process) {\n            this.restarting = true;\n            this.process.kill();\n        } else {\n            this.start();\n        }\n    }\n\n    restartTimeout(timeout: number) {\n        return setTimeout(() => this.restart(), timeout);\n    }\n}\n\nexport default function createDaemon(command, args) {\n    return new SpringbokDaemon(command, args);\n}\n\nexport const node = args => createDaemon('node', args);\ncreateDaemon.node = node;\n"]}