{"version":3,"file":"index-node10.cjs.js","sources":["../src/index.ts"],"sourcesContent":["import { spawn, ChildProcess } from 'child_process';\nimport { Readable as ReadableStream } from 'stream';\nimport gracefulKill from 'graceful-kill';\nimport split from 'split';\nimport Logger, { addConfig, Level } from 'nightingale';\nimport ConsoleLogger from 'nightingale-console';\n\naddConfig({\n  pattern: /^springbokjs-daemon/,\n  handler: new ConsoleLogger(Level.INFO),\n});\n\nexport interface Options {\n  key?: string;\n  displayName?: string;\n  prefixStdout?: boolean;\n  command?: string;\n  args?: (string | number)[];\n  cwd?: string;\n  autoRestart?: boolean;\n  SIGTERMTimeout?: number;\n}\n\nexport interface Daemon {\n  hasExited(): boolean;\n  start(): Promise<void>;\n  // eslint-disable-next-line no-restricted-globals\n  stop(): Promise<void>;\n  restart(): Promise<void>;\n  sendSIGUSR2(): void;\n}\n\nexport default ({\n  key,\n  displayName,\n  prefixStdout = false,\n  command = global.process.argv[0],\n  args = [],\n  cwd,\n  autoRestart = false,\n  SIGTERMTimeout = 4000,\n}: Options = {}): Daemon => {\n  let process: ChildProcess | null = null;\n  let stopPromise: Promise<void> | void;\n  const logger = new Logger(\n    `springbokjs-daemon${key ? `:${key}` : ''}`,\n    displayName,\n  );\n  logger.info('created', { command, args });\n\n  const stop = (): Promise<void> => {\n    if (!process) return Promise.resolve(stopPromise);\n\n    const runningProcess = process;\n    process = null;\n\n    runningProcess.removeAllListeners();\n    stopPromise = gracefulKill(runningProcess, SIGTERMTimeout).then(() => {\n      stopPromise = undefined;\n    });\n\n    return stopPromise as Promise<void>;\n  };\n\n  const start = (): Promise<void> => {\n    if (process) {\n      throw new Error('Process already started');\n    }\n\n    return new Promise((resolve, reject) => {\n      const stdoutOption = prefixStdout ? 'pipe' : 'inherit';\n      process = spawn(command, args as string[], {\n        cwd,\n        stdio: ['ignore', stdoutOption, stdoutOption, 'ipc'],\n      });\n\n      if (prefixStdout) {\n        const logStreamInLogger = (\n          stream: ReadableStream | null,\n          loggerLevel: Level,\n        ) => {\n          if (!stream) return;\n          stream.pipe(split()).on('data', (line: string) => {\n            if (line.length === 0) return;\n            if (line.startsWith('{') && line.endsWith('}')) {\n              try {\n                const json: object = JSON.parse(line);\n                logger.log('', json, loggerLevel);\n                return;\n              } catch (err) {}\n            }\n\n            logger.log(line, undefined, loggerLevel);\n          });\n        };\n\n        logStreamInLogger(process.stdout, Level.INFO);\n        logStreamInLogger(process.stderr, Level.ERROR);\n      }\n\n      process.on('exit', (code, signal) => {\n        logger.warn('exited', { code, signal });\n        process = null;\n        if (autoRestart) {\n          logger.debug('autorestart');\n          start().then(resolve, reject);\n        } else {\n          reject();\n        }\n      });\n\n      process.on('message', (message) => {\n        if (message === 'ready') {\n          logger.success('ready');\n          resolve();\n        } else if (message === 'restart') {\n          logger.info('restarting...');\n          stop().then(() => start());\n        } else {\n          logger.info('message', { message });\n        }\n      });\n    });\n  };\n\n  return {\n    hasExited() {\n      return process === null;\n    },\n\n    start() {\n      logger.info('starting...');\n      return start();\n    },\n\n    stop() {\n      if (!process) logger.info('stopping...');\n      return stop();\n    },\n\n    restart() {\n      logger.info('restarting...');\n      return stop().then(() => start());\n    },\n\n    sendSIGUSR2() {\n      if (process) {\n        process.kill('SIGUSR2');\n      }\n    },\n  };\n};\n"],"names":["addConfig","pattern","handler","ConsoleLogger","Level","INFO","key","displayName","prefixStdout","command","global","process","argv","args","cwd","autoRestart","SIGTERMTimeout","stopPromise","logger","Logger","info","stop","Promise","resolve","runningProcess","removeAllListeners","gracefulKill","then","undefined","start","Error","reject","stdoutOption","spawn","stdio","logStreamInLogger","stream","loggerLevel","pipe","split","on","line","length","startsWith","endsWith","json","JSON","parse","log","err","stdout","stderr","ERROR","code","signal","warn","debug","message","success","hasExited","restart","sendSIGUSR2","kill"],"mappings":";;;;;;;;;;;;;AAOAA,gBAAS,CAAC;EACRC,OAAO,EAAE,qBADD;EAERC,OAAO,EAAE,IAAIC,aAAJ,CAAkBC,YAAK,CAACC,IAAxB;CAFF,CAAT;AAyBA,aAAe,CAAC;EACdC,GADc;EAEdC,WAFc;EAGdC,YAAY,GAAG,KAHD;EAIdC,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoB,CAApB,CAJI;EAKdC,IAAI,GAAG,EALO;EAMdC,GANc;EAOdC,WAAW,GAAG,KAPA;EAQdC,cAAc,GAAG;IACN,EATE,KASa;MACtBL,OAA4B,GAAG,IAAnC;MACIM,WAAJ;QACMC,MAAM,GAAG,IAAIC,eAAJ,CACZ,qBAAoBb,GAAG,GAAI,IAAGA,GAAI,EAAX,GAAe,EAAG,EAD7B,EAEbC,WAFa,CAAf;EAIAW,MAAM,CAACE,IAAP,CAAY,SAAZ,EAAuB;IAAEX,OAAF;IAAWI;GAAlC;;QAEMQ,IAAI,GAAG,MAAqB;QAC5B,CAACV,OAAL,EAAc,OAAOW,OAAO,CAACC,OAAR,CAAgBN,WAAhB,CAAP;UAERO,cAAc,GAAGb,OAAvB;IACAA,OAAO,GAAG,IAAV;IAEAa,cAAc,CAACC,kBAAf;IACAR,WAAW,GAAGS,YAAY,CAACF,cAAD,EAAiBR,cAAjB,CAAZ,CAA6CW,IAA7C,CAAkD,MAAM;MACpEV,WAAW,GAAGW,SAAd;KADY,CAAd;WAIOX,WAAP;GAXF;;QAcMY,KAAK,GAAG,MAAqB;QAC7BlB,OAAJ,EAAa;YACL,IAAImB,KAAJ,CAAU,yBAAV,CAAN;;;WAGK,IAAIR,OAAJ,CAAY,CAACC,OAAD,EAAUQ,MAAV,KAAqB;YAChCC,YAAY,GAAGxB,YAAY,GAAG,MAAH,GAAY,SAA7C;MACAG,OAAO,GAAGsB,mBAAK,CAACxB,OAAD,EAAUI,IAAV,EAA4B;QACzCC,GADyC;QAEzCoB,KAAK,EAAE,CAAC,QAAD,EAAWF,YAAX,EAAyBA,YAAzB,EAAuC,KAAvC;OAFM,CAAf;;UAKIxB,YAAJ,EAAkB;cACV2B,iBAAiB,GAAG,CACxBC,MADwB,EAExBC,WAFwB,KAGrB;cACC,CAACD,MAAL,EAAa;UACbA,MAAM,CAACE,IAAP,CAAYC,KAAK,EAAjB,EAAqBC,EAArB,CAAwB,MAAxB,EAAiCC,IAAD,IAAkB;gBAC5CA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;;gBACnBD,IAAI,CAACE,UAAL,CAAgB,GAAhB,KAAwBF,IAAI,CAACG,QAAL,CAAc,GAAd,CAA5B,EAAgD;kBAC1C;sBACIC,IAAY,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAX,CAArB;gBACAvB,MAAM,CAAC8B,GAAP,CAAW,EAAX,EAAeH,IAAf,EAAqBR,WAArB;;eAFF,CAIE,OAAOY,GAAP,EAAY;;;YAGhB/B,MAAM,CAAC8B,GAAP,CAAWP,IAAX,EAAiBb,SAAjB,EAA4BS,WAA5B;WAVF;SALF;;QAmBAF,iBAAiB,CAACxB,OAAO,CAACuC,MAAT,EAAiB9C,YAAK,CAACC,IAAvB,CAAjB;QACA8B,iBAAiB,CAACxB,OAAO,CAACwC,MAAT,EAAiB/C,YAAK,CAACgD,KAAvB,CAAjB;;;MAGFzC,OAAO,CAAC6B,EAAR,CAAW,MAAX,EAAmB,CAACa,IAAD,EAAOC,MAAP,KAAkB;QACnCpC,MAAM,CAACqC,IAAP,CAAY,QAAZ,EAAsB;UAAEF,IAAF;UAAQC;SAA9B;QACA3C,OAAO,GAAG,IAAV;;YACII,WAAJ,EAAiB;UACfG,MAAM,CAACsC,KAAP,CAAa,aAAb;UACA3B,KAAK,GAAGF,IAAR,CAAaJ,OAAb,EAAsBQ,MAAtB;SAFF,MAGO;UACLA,MAAM;;OAPV;MAWApB,OAAO,CAAC6B,EAAR,CAAW,SAAX,EAAuBiB,OAAD,IAAa;YAC7BA,OAAO,KAAK,OAAhB,EAAyB;UACvBvC,MAAM,CAACwC,OAAP,CAAe,OAAf;UACAnC,OAAO;SAFT,MAGO,IAAIkC,OAAO,KAAK,SAAhB,EAA2B;UAChCvC,MAAM,CAACE,IAAP,CAAY,eAAZ;UACAC,IAAI,GAAGM,IAAP,CAAY,MAAME,KAAK,EAAvB;SAFK,MAGA;UACLX,MAAM,CAACE,IAAP,CAAY,SAAZ,EAAuB;YAAEqC;WAAzB;;OARJ;KA1CK,CAAP;GALF;;SA6DO;IACLE,SAAS,GAAG;aACHhD,OAAO,KAAK,IAAnB;KAFG;;IAKLkB,KAAK,GAAG;MACNX,MAAM,CAACE,IAAP,CAAY,aAAZ;aACOS,KAAK,EAAZ;KAPG;;IAULR,IAAI,GAAG;UACD,CAACV,OAAL,EAAcO,MAAM,CAACE,IAAP,CAAY,aAAZ;aACPC,IAAI,EAAX;KAZG;;IAeLuC,OAAO,GAAG;MACR1C,MAAM,CAACE,IAAP,CAAY,eAAZ;aACOC,IAAI,GAAGM,IAAP,CAAY,MAAME,KAAK,EAAvB,CAAP;KAjBG;;IAoBLgC,WAAW,GAAG;UACRlD,OAAJ,EAAa;QACXA,OAAO,CAACmD,IAAR,CAAa,SAAb;;;;GAtBN;CA7FF;;;;"}