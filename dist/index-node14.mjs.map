{"version":3,"file":"index-node14.mjs","sources":["../src/index.ts"],"sourcesContent":["import { spawn } from 'child_process';\nimport type { ChildProcess } from 'child_process';\nimport type { Readable as ReadableStream } from 'stream';\nimport { gracefulKill } from 'graceful-kill';\nimport { Logger, addConfig, Level } from 'nightingale';\nimport { ConsoleHandler } from 'nightingale-console';\nimport split from 'split';\n\naddConfig({\n  pattern: /^springbokjs-daemon/,\n  handler: new ConsoleHandler(Level.INFO),\n});\n\nexport interface Options<Messages = any> {\n  key?: string;\n  displayName?: string;\n  prefixStdout?: boolean;\n  outputKey?: string;\n  outputDisplayName?: string;\n  command?: string;\n  args?: (string | number)[];\n  cwd?: string;\n  env?: NodeJS.ProcessEnv;\n  autoRestart?: boolean;\n  SIGTERMTimeout?: number;\n  onMessage?: (message: Messages) => void;\n}\n\nexport interface Daemon {\n  hasExited: () => boolean;\n  start: () => Promise<void>;\n  stop: () => Promise<void>;\n  restart: () => Promise<void>;\n  sendSIGUSR2: () => void;\n}\n\nexport function createDaemon({\n  key,\n  displayName,\n  prefixStdout = false,\n  outputKey = key,\n  outputDisplayName = displayName,\n  command = global.process.argv[0],\n  args = [],\n  cwd,\n  env,\n  autoRestart = false,\n  SIGTERMTimeout = 4000,\n  onMessage,\n}: Options = {}): Daemon {\n  let process: ChildProcess | null = null;\n  let stopPromise: Promise<void> | void;\n  const logger = new Logger(\n    `springbokjs-daemon${key ? `:${key}` : ''}`,\n    displayName,\n  );\n  logger.info('created', { command, args });\n\n  const outputLogger = prefixStdout\n    ? new Logger(\n        `springbokjs-daemon${outputKey ? `:${outputKey}` : ''}`,\n        outputDisplayName,\n      )\n    : undefined;\n\n  const stop = (): Promise<void> => {\n    if (!process) return Promise.resolve(stopPromise);\n\n    const runningProcess = process;\n    process = null;\n\n    runningProcess.removeAllListeners();\n    stopPromise = gracefulKill(runningProcess, SIGTERMTimeout).then(() => {\n      stopPromise = undefined;\n    });\n\n    return stopPromise;\n  };\n\n  const start = (): Promise<void> => {\n    if (process) {\n      throw new Error('Process already started');\n    }\n\n    return new Promise((resolve, reject) => {\n      const stdoutOption = outputLogger ? 'pipe' : 'inherit';\n      process = spawn(command, args as string[], {\n        cwd,\n        env,\n        stdio: ['ignore', stdoutOption, stdoutOption, 'ipc'],\n      });\n\n      if (outputLogger) {\n        const logStreamInLogger = (\n          stream: ReadableStream | null,\n          loggerLevel: Level,\n        ): void => {\n          if (!stream) return;\n          stream.pipe(split()).on('data', (line: string) => {\n            if (line.length === 0) return;\n            if (line.startsWith('{') && line.endsWith('}')) {\n              try {\n                const json = JSON.parse(line) as Record<string, unknown>;\n                logger.log('', json, loggerLevel);\n                return;\n              } catch {}\n            }\n\n            outputLogger.log(line, undefined, loggerLevel);\n          });\n        };\n\n        logStreamInLogger(process.stdout, Level.NOTICE);\n        logStreamInLogger(process.stderr, Level.ERROR);\n      }\n\n      process.on('exit', (code, signal) => {\n        logger.warn('exited', { code, signal });\n        process = null;\n        if (autoRestart) {\n          logger.debug('autorestart');\n          start().then(resolve, reject);\n        } else {\n          reject();\n        }\n      });\n\n      process.on('message', (message) => {\n        if (message === 'ready') {\n          logger.success('ready');\n          if (onMessage) onMessage('ready');\n          resolve();\n        } else if (message === 'restart') {\n          logger.notice('restarting...');\n          stop().then(\n            () => start(),\n            () => {},\n          );\n        } else if (onMessage) {\n          onMessage(message);\n        } else {\n          logger.notice('message', { message });\n        }\n      });\n    });\n  };\n\n  return {\n    hasExited(): boolean {\n      return process === null;\n    },\n\n    start() {\n      logger.notice('starting...');\n      return start();\n    },\n\n    stop() {\n      if (!process) logger.notice('stopping...');\n      return stop();\n    },\n\n    restart() {\n      logger.notice('restarting...');\n      return stop().then(() => start());\n    },\n\n    sendSIGUSR2() {\n      if (process) {\n        process.kill('SIGUSR2');\n      }\n    },\n  };\n}\n\n/** @deprecated use named export instead */\nexport default createDaemon;\n"],"names":["addConfig","pattern","handler","ConsoleHandler","Level","INFO","createDaemon","key","displayName","prefixStdout","outputKey","outputDisplayName","command","global","process","argv","args","cwd","env","autoRestart","SIGTERMTimeout","onMessage","stopPromise","logger","Logger","info","outputLogger","undefined","stop","Promise","resolve","runningProcess","removeAllListeners","gracefulKill","then","start","Error","reject","stdoutOption","spawn","stdio","logStreamInLogger","stream","loggerLevel","pipe","split","on","line","length","startsWith","endsWith","json","JSON","parse","log","stdout","NOTICE","stderr","ERROR","code","signal","warn","debug","message","success","notice","hasExited","restart","sendSIGUSR2","kill"],"mappings":"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"}