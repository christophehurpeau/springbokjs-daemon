{"version":3,"file":"index-node20.mjs","sources":["../src/index.ts"],"sourcesContent":["import { spawn } from \"node:child_process\";\nimport type { ChildProcess } from \"node:child_process\";\nimport type { Readable as ReadableStream } from \"node:stream\";\nimport { gracefulKill } from \"graceful-kill\";\nimport { Level, Logger, addConfig } from \"nightingale\";\nimport { ConsoleHandler } from \"nightingale-console\";\nimport split from \"split\";\n\naddConfig({\n  pattern: /^springbokjs-daemon/,\n  handler: new ConsoleHandler(Level.INFO),\n});\n\nexport interface Options<Messages = any> {\n  key?: string;\n  displayName?: string;\n  prefixStdout?: boolean;\n  outputKey?: string;\n  outputDisplayName?: string;\n  command?: string;\n  args?: (number | string)[];\n  cwd?: string;\n  env?: NodeJS.ProcessEnv;\n  autoRestart?: boolean;\n  SIGTERMTimeout?: number;\n  onMessage?: (message: Messages) => void;\n}\n\nexport interface Daemon {\n  hasExited: () => boolean;\n  start: () => Promise<void>;\n  stop: () => Promise<void>;\n  restart: () => Promise<void>;\n  sendSIGUSR2: () => void;\n}\n\nexport function createDaemon({\n  key,\n  displayName,\n  prefixStdout = false,\n  outputKey = key,\n  outputDisplayName = displayName,\n  command = global.process.argv[0],\n  args = [],\n  cwd,\n  env,\n  autoRestart = false,\n  SIGTERMTimeout = 4000,\n  onMessage,\n}: Options = {}): Daemon {\n  let process: ChildProcess | null = null;\n  let stopPromise: Promise<void> | void;\n  const logger = new Logger(\n    `springbokjs-daemon${key ? `:${key}` : \"\"}`,\n    displayName,\n  );\n  logger.info(\"created\", { command, args });\n\n  const outputLogger = prefixStdout\n    ? new Logger(\n        `springbokjs-daemon${outputKey ? `:${outputKey}` : \"\"}`,\n        outputDisplayName,\n      )\n    : undefined;\n\n  const stop = (): Promise<void> => {\n    if (!process) return Promise.resolve(stopPromise);\n\n    const runningProcess = process;\n    process = null;\n\n    runningProcess.removeAllListeners();\n    stopPromise = gracefulKill(runningProcess, SIGTERMTimeout).then(() => {\n      stopPromise = undefined;\n    });\n\n    return stopPromise;\n  };\n\n  const start = (): Promise<void> => {\n    if (process) {\n      throw new Error(\"Process already started\");\n    }\n\n    return new Promise((resolve, reject) => {\n      const stdoutOption = outputLogger ? \"pipe\" : \"inherit\";\n      process = spawn(command, args as string[], {\n        cwd,\n        env,\n        stdio: [\"ignore\", stdoutOption, stdoutOption, \"ipc\"],\n      });\n\n      if (outputLogger) {\n        const logStreamInLogger = (\n          stream: ReadableStream | null,\n          loggerLevel: Level,\n        ): void => {\n          if (!stream) return;\n          stream.pipe(split()).on(\"data\", (line: string) => {\n            if (line.length === 0) return;\n            if (line.startsWith(\"{\") && line.endsWith(\"}\")) {\n              try {\n                const json = JSON.parse(line) as Record<string, unknown>;\n                logger.log(\"\", json, loggerLevel);\n                return;\n              } catch {}\n            }\n\n            outputLogger.log(line, undefined, loggerLevel);\n          });\n        };\n\n        logStreamInLogger(process.stdout, Level.NOTICE);\n        logStreamInLogger(process.stderr, Level.ERROR);\n      }\n\n      process.on(\"exit\", (code, signal) => {\n        logger.warn(\"exited\", { code, signal });\n        process = null;\n        if (autoRestart) {\n          logger.debug(\"autorestart\");\n          start().then(resolve, reject);\n        } else {\n          reject(new Error(\"Exited\"));\n        }\n      });\n\n      process.on(\"message\", (message) => {\n        if (message === \"ready\") {\n          logger.success(\"ready\");\n          if (onMessage) onMessage(\"ready\");\n          resolve();\n        } else if (message === \"restart\") {\n          logger.notice(\"restarting...\");\n          stop().then(\n            () => start(),\n            () => {},\n          );\n        } else if (onMessage) {\n          onMessage(message);\n        } else {\n          logger.notice(\"message\", { message });\n        }\n      });\n    });\n  };\n\n  return {\n    hasExited(): boolean {\n      return process === null;\n    },\n\n    start() {\n      logger.notice(\"starting...\");\n      return start();\n    },\n\n    stop() {\n      if (!process) logger.notice(\"stopping...\");\n      return stop();\n    },\n\n    restart() {\n      logger.notice(\"restarting...\");\n      return stop().then(() => start());\n    },\n\n    sendSIGUSR2() {\n      if (process) {\n        process.kill(\"SIGUSR2\");\n      }\n    },\n  };\n}\n\n/** @deprecated use named export instead */\nexport default createDaemon;\n"],"names":[],"mappings":"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"}